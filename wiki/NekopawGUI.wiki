#summary Описание графического интерфейса пользователя (работа с клиентом в целом)
#labels Featured,Phase-Deploy

= Первый экран =

Немного пустоват да.

При запуске программы по дефолту происходит автоматическая проверка на обновления. Если обновления будут обнаружены, появится окно, предлагающее скачать их. Проверку можно отключить в настройках.

Кнопки:<br />
Новый список - создание нового проекта;<br />
Загрузить список - не работает;<br />
Настройки - настройки работы программы.<br />
Выход - выход.

= Страница составления списка =

Появляется при нажатии "Новый список".<br />
Справа находится список борд, которые можно добавить. Слева - находящиеся в списке.<br />
Чтобы добавить элемент в список, нужно нажать кнопку со стрелкой в списке борд. Так же можно убрать элементы из текущего списка.<br />
Чтобы продолжить настройку надо нажать кнопку "След. шаг". Для возвращения на предыдущий экран "Пред. шаг".<br />
Появится панель настроек борд. Пункт "Основное" в списке борд является глобальным и распространяется на все борды в списке, у которых не отключен чекбокс "Наследовать настройки".<br />
Для завершения списка нужно нажать "Завершить".

= Закачка =

Получение списка начинается сразу же после завершения списка.<br />
Появляется главное меню и панель деталей слева.<br />
Получение списка можно прервать, для этого надо нажать "Остановить загрузку списка" на главном меню.<br />
Когда получение списка будет завершено, можно начать закачку изображений. Для этого надо нажать "Начать закачку изображений". Для прерывания "Остановить закачку изображений".<br />
Качаться будут только отмеченные галочкой изображения.<br />
Пункт "Столбцы" позволяет добавлять и убирать поля с аттрибутами изображений".<br />
"Фильтр" включает настройку фильтра.<br />
"Выбрать" и "убрать" позволяет выполнить массовую расстановку галочек в списке. Можно выбрать "Все", "Выделенные" и "Отфильтрованные, а также "Инвертировать" выбранное.

Для добавления закладки (и начала нового списка) нужно нажать "Новый список" на главном меню. Для закрытия списка есть крестик в правом углу на панели вкладок.

Внизу под таблицей указывается вспомогательная информация:<br />
- ON AIR значит, что идет процесс скачки;<br />
- TTL - всего в списке;<br />
- IGN - количество проигнорированных изображений в соотвествии с правилами игнорирования (поиска дублей);<br />
- TBL - время, затраченное на добавление элементов в таблицу;<br />
- DBL - время, затраченное на добавление элементов в массив (включая поиск дублей).

= Возможности фильтра =

Все поля, по которым можно фильтровать, имеют свой тип данных.<br />
Таким образом числовые поля (напр. размеры, рейтинги и даты) можно выбирать в диопазоне "больше" или "меньше".<br />
Для строчных же полей работают только "равно" либо "содержит текст". Правила для "содержит" как у ключевого слова like из SQL:<br />
Знак "%" значит, что не важно, что содержится в данном промежутке.Пример: %sup - значит, что будут искаться все строки, кончающиеся на sup. А%ть - будут искаться все строки, которые начинаются на "а" и кончаются на "ть".<br />
Знак "`_`" значит пропуск символа, т.е. не важно, какой символ содержится в одном знаке вместо "`_`". Пример: pic00`_` - в этом случае будут браться все строки, у которых только последний знак может быть любым.

Во время скачки появляются дополнительные поля "Загружено", "Размер" и "Прогресс". Если отфильтровать поле "Загружено" по содержимому (т.е. = не пустое), то можно отслеживать все качающиеся в данные момент изображения, т.к. в поле "Загружено" отображается, сколько скачано на данный момент, и все остальное время поле пустое.

= Настройки =

*Интерфейс*<br />
Язык - язык интерфейса;<br />
Проверять обновления при запуске - автоматически проверять на наличие обновлений при запуске программы;<br />
Проверить обновления сейчас - при клике по пункту будет произведена проверка на наличие новых обновлений.

*Потоки*<br />
Количество потоков списка - количество потоков, использующихся при получении списка изображений;<br />
Ограничение на ресурс - ограничивать ли количество потоков на каждый отдельный ресурс;<br />
Количество потоков на ресурс - если ограничение выше включено, то ограничивает количество потоков на каждый ресурс указанным числом;<br />
Количество потоков изображений - количество потоков, качающих изображения;<br />
Количество попыток - количество попыток скачать изображение или страницу. Некоторые ошибки не дают возможности повторить попытку, например 404 (не существует).

*Прокси* - настройки подключения HTTP-прокси.

*Даблы* - раздел с правилами поиска дубликатов изображений. Каждое правило в списке работает независимо (как по правило ИЛИ), и для того, чтобы изображение посчиталось дублем, должно выполниться хотя бы одно из них. В свою очередь, каждое правило имеет список условий. Редактор условий доступен при редактировании имеющегося или создании нового правила. В этом редакторе нужно указать, какое поле добавляемого изображения (левая часть) с какими полями имеющихся изображений будет сравниваться (правая часть). Условие вида "url = url или url = source" в редакторе условий будет выглядеть так:

|| url || url ||
|| || source ||

т.е. для того, чтобы получилось условие ИЛИ поле с названием поля изображения нужно оставить пустым. Чтобы создать правило "url = url и url = source" необходимо вместо пустого поля указать url еще раз

|| url || url ||
|| url || source ||

Для любых API-борд достаточно создать правило md5=md5. С теми же бордами, у которых нет API (и нет возможности узнать хеш-сумму до скачки изображения на винт) придется поизвращаться. Так или иначе, если изображение не имеет поля, по которому происходит проверка, то правило с этим полем будет проигнорировано.

*Ресурсы* - здесь можно предустановить типичные настройки для каждого отдельного ресурса (или сразу для всех путем наследование от "основных").

Чтобы указать "основные", типичные для всех ресурсов, настройки, нужно кликнуть на название раздела.<br />
Чтобы отключить наследования "основных" настроек отключите опцию "наследовать конфигурацию".<br />
Так же для каждого ресурса можно указать логин и пароль, с которыми можно авторизоваться на ресурсе.

= Нереализованные в GUI настройки =

В settings.ini:<br />
profile= - имя профиля настроек (по умолчанию dafault.ini);<br />
updserver= - ссылка на каталог, где находятся обновления (по умолчанию http://nekopaw.googlecode.com/svn/trunk/release/graber2/ , и менять нет смысла).<br />
Так же в разделе update хранятся текущие версии файлов.

В {профиль}.ini:<br />
Раздел `[`ignorelist`]`<br />
{сравниваемое поле} = {проверямые поля через запятую}<br />
Позволяет сравнивать поля изображений, и при совпадении данных, изображение игнорируется. Происходит автоматически в процессе получения списка.<br />
Пример:<br />
url=url,source<br />
md5=md5<br />
Примечание: игнорирование защищает вас только от дублирования элементов в списке, но не от совпадения с сохраненными файлами. Порядок получения ссылок не упорядочен (из-за чего источник может постоянно меняться), поэтому либо при сохранении используйте имена файлов, которые наверняка будут совпадать с имеющимися файлами (напр. хэш-сумму, в этом случае файл будет пропущен), либо используйте один и тот же список каждый раз, когда ищете по одному и тому же ключевому слову (что весьма сложно в связи с тем, что сохранение списка пока не реализовано). В будущем так же будет возможность сравнивать списки друг с другом.<br />

= Форматирование имени файла =
Указывать переменные не обязательно, но при они могут помочь назвать файл или распределить файлы по папкам более внятно. В обычном случае достаточно просто указать путь для сохранения. 
|| *переменная* || *описание* || *пример* ||
|| *$rname$* || имя ресурса || safebooru.org ||
|| *$fname$* || полученное имя файла при получении списка, без расширения || b6b3a54dc0c3984e75cc1134dbc844bd5b45d145 ||
|| *$short$* || сокращенное имя ресурса || sfbr, glbr, imto ||
|| *$ext$* || расширение изображения || jpeg, gif ||
|| *$rootdir$* || каталог, в котором находится программа, без завершающего знака "\" || ||
|| *$tag$* || ключевые слова, которые указаны в поле "тэг" || ||
|| *$nn$* || порядковый номер в списке || ||
|| *%{Атрибут изображения}%* || атрибут, полученный при получении списка || id, source, width, rating ||

Если имя переменной или аттрибута не существует, то оно останется в имени файла.
|| *Пример* || *Результат* ||
|| c:\$bname$\$short$ %author% %id% || c:\$bname$\sfbr %author% 123456789<br />c:\$bname$\imto Gidrant 987654321 ||

Чтобы избежать появления нежелательных тэгов можно их "изолировать" треугольными скобками.
|| *Пример* || *Результат* ||
|| c:\<$bname$\>$short$< %author%> %id% || c:\sfbr 123456789<br />c:\imto Gidrant 987654321 ||

Изоляция так же действует на все символы, находящиеся внутри, т.е. можно сделать конструкцию типа: %id%< page%page%>.$ext$.
Изолировать можно и несколько имен, в этом случае текст остается если удается подставить хотя бы 1 имя. То, что подставить не удалось, удаляются.

Теперь можно так же создавать формат отображения для ключей. Если это дата, то будет использовать формат даты-времени, для всех остальных используется строчно-числовой. Задается формат через двоеточее после имени ключа.

|| *Пример* || *Исходное* || *Результат* ||
|| %posted:yyyy-mm-nn% || 31.12.2012 || 2011-12-31 ||
|| %width:.6d% || 1024 || 001024 ||

Как понять, что надо подставлять, чтобы добиться нужного результата:
=== Строко-числовой формат ===
*`[`-`]``[`Width`]``[`.Precision`]`Type*

*Width* - минимальная длинна строки (заполняется пробелами).

*Precision* - ведущие нули (заполняется нулями, напр. 000123). В дробных числах нули заполняются с обратной стороны (напр. 1.2300).

*Type* - тип значения.
|| *Тип* || *Расшифровка* || *Пример* || *Тип* || *Расшифровка* || *Пример* ||
|| *d* || Decimal || -123 || *e* || Exponent || 1.23456780000000E+004 ||
|| *f* || Fixed || 12345.68 || *g* || General || 12345.678 ||
|| *n* || Number || 12,345,68 || *m* || Money || $12,345.68 (12 345,68р.) ||
|| *p* || Pointer || 0069FC90 || *s* || String || Hello ||
|| *u* || Unsigned decimal || 123 || *x* || Hexadecimal || 8C ||

=== Формат даты и времени ===
|| *ключ* || *описание* || *ключ* || *описание* || 
|| *y* || Год из 2-х последних цифр (без ведущего 0) || *m* || Номер месяца (без ведущего 0) ||
|| *yy* || Год из 2-х последних цифр (с ведущим 0) || *mm* || Номер месяца из 2х цифр ||
|| *yyyy* || Год из 4-х цифр || *mmm* || Месяц используя *`ShortMonthNames`* ||
|| *d* || День (без ведущего 0) || *mmmm* || Месяц используя *`LongMonthNames`* ||
|| *dd* || День (с ведущим 0) || *h* || час (без ведущего 0) ||
|| *ddd* || День используя *`ShortDayNames`* || *hh* || час (с ведущим 0) ||
|| *dddd* || День используя *`LongDayNames`* || *n* || минуты (без ведущего 0) ||
|| *ddddd* || Число в *`ShortDateFormat`* || *nn* || минуты (с ведущим 0) ||
|| *dddddd* || Число в *`LongDateFormat`* || *s* || секунды (без ведущего 0) ||
|| *t* || Время используя *`ShortTimeFormat`* || *ss* || секунды (с ведущим 0) ||
|| *tt* || Время используя *`LongTimeFormat`* || *c* || *`ShortDateFormat`* + *`LongTimeFormat`* ||
|| *am/pm* || Используется после h : выдаёт 12 часов + am/pm || */* || Заменяется на *`DateSeparator`* ||
|| *a/p* || Используется после h : выдаёт 12 часов + a/p || *:* || Заменяется на *`TimeSeparator`* ||
|| *ampm* || Как a/p но используя *`TimeAMString`*,*`TimePMString`* || || ||


В дополнение к этому форматированию, различные из вышеупомянутых вариантов затрагиваются следующими переменными, с их значением по умолчанию (умолчания определяются ОС):

|| *Название* || *Пример* || *Название* || *Пример* ||
|| *`DateSeparator`* || . || *`TimeSeparator`* || : ||
|| *`ShortDateFormat`* || dd/mm/yyyy || *`LongDateFormat`* || dd mmm yyyy ||
|| *`TimeAMString`* || AM || *`TimePMString`* || PM ||
|| *`ShortTimeFormat`* || hh:nn || *`LongTimeFormat`* || hh:nn:ss ||
|| *`ShortMonthNames`* || Янв Фев ... || *`LongMonthNames`* || Январь, Февраль ... ||
|| *`ShortDayNames`* || Воск, Пон ... || *`LongDayNames`* || Воскресенье, Понедельник ... ||